//쿠키,세션,캐시의 개념과 차이에 대한 점이다.
//http://blog.kurien.co.kr/544

//쿠키는 '사용자의 브라우저'에 저장되어 사용자의 컴퓨터를 만질 수 있다면 누구라도 
//쿠키에 입력된 값을 확인할 수 있습니다.
//이 말은 "보안성이 없다"라는거죠.

//세션은 "서버에 저장되는 쿠키"라고 이해하시면 편합니다.
//서버에 저장되고, 서버에 직접 접근하지 않는 이상 세션 내의 데이터를 탈취하는 것은 어렵다고 보시면 됩니다.

//캐시는 쿠키, 세션과는 전혀 다른 기능을 가지는데요.
//홈페이지를 접속하면 css, js, 이미지 파일이 사용자의 브라우저에 저장이 됩니다.
//그 후 다시 같은 홈페이지를 접속하게 되면 css, js, 이미지 파일을 서버가 아닌 사용자의 PC에서 가져오게 됩니다.



//쿠키와 세션의 차이
//쿠키의 경우 위에서 보안성이 없다고 했는데요.
// 기본적으로 모든 브라우저의 쿠키는 쉽게 열람이 가능합니다.
// 이전의 웹 사이트에서는 자동 로그인 기능을 제작할 때 쿠키에 아이디와 비번을 넣어놓고 쿠키가 있다면 
// 자동 로그인 되게끔 만든적이 있어서 보안적으로 문제가 됐었던 적이 있죠.
// 쿠키는 보안적인 부분은 없으므로 "절대로" 중요 데이터가 입력되어선 안됩니다.
// 쿠키를 사용하는 대표적인 기능은 쇼핑몰의 장바구니가 있겠네요.
// 크게 중요한 데이터도 아니면서, 한번 쓰고 버리는 데이터니까요

// 세션은 쿠키와 밀접한 관계가 있는데요.
// 서버는 사용자 하나하나를 인식할 수가 없습니다.
// 이 말은 사용자1, 사용자2가 있을 때 사용자1이 로그인 했더라도 "로그인한게 사용자1 이다"라는 것을 알 수 없습니다.
// 하지만 정상적으로 로그인 되는 이유는 쿠키와 세션의 연결에 의해서입니다.
// 사용자가 처음 웹에 접속하게 되면 서버는 세션을 하나 생성하고, 세션에 해당하는 쿠키를 사용자에게 생성합니다.
// 이 쿠키는 사용자가 웹 페이지를 접속할 때마다 서버에 보내지게 되는데요.
// 서버는 이 쿠키의 값을 가지고 해당 세션이 있는지 검사한 뒤, 세션이 있다면 "이 사람이 사용자1이다."라고 
// 판단하게 되는겁니다
// 그래서 대부분의 웹사이트를 들어가서 쿠키를 확인해보면 PHP의 경우 PHPSESSID, JSP의 경우 JSESSIONID 등이 있습니다.